<!DOCTYPE html>
<html>
  <head>
    <title>YouBirl</title>
    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <!-- <meta property="og:image" content="https://youbirl.herokuapp.com/images/frango.jpg" /> -->

    <meta property="og:url"           content="https://youbirl.herokuapp.com" />
    <meta property="og:type"          content="website" />
    <meta property="og:title"         content="EU FIZ O TESTE BODYBUILDER DO BAMBAM, FAÇA TAMBÉM" />
    <meta property="og:description"   content="Quiz para saber que tipo de bodybuilder você é, faça agora!" />
    <meta property="og:image"         content="https://youbirl.herokuapp.com/images/BAMBAM.png" />
    <!--
    Stylesheets and Preprocessors
    ==============================
    You can always bring in CSS files manually with `<link>` tags, or asynchronously
    using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
    of Sails' conventional asset pipeline (boilerplate Gruntfile).
    By default, stylesheets from your `assets/styles` folder are included
    here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
    are supported. In production, your styles will be minified and concatenated into
    a single file.
    To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
    For example, here are a few things you could do:
    + Change the order of your CSS files
    + Import stylesheets from other directories
    + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->
    <!--STYLES-->
    <link rel="stylesheet" href="/styles/all.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
  </head>
  <body>

  <div id="fb-root"></div>
  <script>(function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/pt_BR/sdk.js#xfbml=1&version=v2.9";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));</script>

  <script language="javascript">
    var LIP_LowPrecision = true; //false = ask permission to the browser, higher precision | true = don't ask permission, lower precision
    function LocalizaIP_done(ip_data){
      if (!ip_data['error']) //this line is an exemple, you must change it by your Geolocation manipulation code
        alert('IP Geolocation: '+ip_data['city']+'-'+ip_data['state']+'-'+ip_data['country']+' (lat:'+ip_data['latitude']+',long:'+ip_data['longitude']+')');
    }</script>
    <script src="https://www.localizaip.com/api/geolocation.js.php?domain=youbirl.herokuapp.com&token=YmliYW9AaG90bWFpbC5jb218Mzk0NDQyODg="></script>

  <audio id='bora'>
    <source src="boraaaa.mp3" type="audio/mpeg">
    Your browser does not support this audio format.
  </audio>

  <audio id='final'>
    <source src="monstrão (QUE NUM VAI DÁ).mp3" type="audio/mpeg">
    Your browser does not support this audio format.
  </audio>

  <audio id='birl'>
    <source src="birl.mp3" type="audio/mpeg">
    Your browser does not support this audio format.
  </audio>

  <audio id='iu'>
    <source src="iu.mp3" type="audio/mpeg">
    Your browser does not support this audio format.
  </audio>



    <div class="navbar">YouBirl</div>
    <div>
      <div class="w-20"></div>
      <div class="w-60">
        <div class="menu center">
          <h1>Teste bodybuilder do BAMBAM</h1>


          <button class="botone" onclick="boraProTeste()">Iniciar teste</button>

          <div class="letrinhas">
            Ao clicar no botao "Iniciar teste" você está automaticamente aceitando os "Termos do site" visível na parte inferior do site.
          </div>
        </div>

        <div class="menu">
          <div class="pergunta"></div>
          <div class="escolha" onclick="proxima(this)"></div>
          <div class="escolha" onclick="proxima(this)"></div>
          <div class="escolha" onclick="proxima(this)"></div>
          <div class="escolha" onclick="proxima(this)"></div>
        </div>
        <div style="text-align: center; margin-bottom: 50px;">
          <!-- <div class="fb-share-button" data-href="http://youbirl.com" data-layout="button" data-size="large" data-mobile-iframe="true"><a class="fb-xfbml-parse-ignore" target="_blank" href="https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Fyoubirl.com%2F&amp;src=sdkpreparse">Compartilhar</a></div> -->
          <div class="fb-share-button" data-href="https://youbirl.herokuapp.com/" data-layout="box_count" data-size="large" data-mobile-iframe="true"><a class="fb-xfbml-parse-ignore" target="_blank" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fyoubirl.herokuapp.com%2F&amp;src=sdkpreparse">Compartilhar</a></div>
        </div>
      </div>
      <div class="w-20"></div>
    </div>

    <div class="rodape">
      Termos do site - Este site apresenta palavrões e linguagem informal, o mesmo não tem objetivo de ofender ou se referir a alguém de forma maldosa, sendo criado para ser considerado uma forma de diversão momentânea. Ao responder as perguntas, você está concordando que está ciente dessas informações. Todas as imagens foram retiradas da internet.
    </div>
    <!--
    Client-side Templates
    ========================
    HTML templates are important prerequisites of modern, rich client applications.
    To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
    that you load these templates client-side.
    By default, your Gruntfile is configured to automatically load and precompile
    client-side JST templates in your `assets/templates` folder, then
    include them here automatically (between TEMPLATES and TEMPLATES END).
    To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
    For example, here are a few things you could do:
    + Import templates from other directories
    + Use a different template engine (handlebars, jade, dust, etc.)
    + Internationalize your client-side templates using a server-side
    stringfile before they're served.
    -->
    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->
    <!--
    Client-side Javascript
    ========================
    You can always bring in JS files manually with `script` tags, or asynchronously
    on the client using a solution like AMD (RequireJS).  Or, if you like, you can
    take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).
    By default, files in your `assets/js` folder are included here
    automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
    CoffeeScript (.coffee) are supported. In production, your scripts will be minified
    and concatenated into a single file.
    To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
    For example, here are a few things you could do:
    + Change the order of your scripts
    + Import scripts from other directories
    + Use a different preprocessor, like TypeScript
    -->
    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/render.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>